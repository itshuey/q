{"version":3,"sources":["components/QueueItem.js","components/ShowQueue.js","components/Stopwatch.js","App.js","Root.js","serviceWorker.js","index.js","q.png"],"names":["QueueItem","props","onDeleteClick","bind","axios","delete","this","item","_id","then","res","updateInfo","catch","err","console","log","message","name","index","date","Date","time","nameString","minutes","getMinutes","hours","timeZone","getHours","dateString","deleteBlock","className","onClick","emptyBlock","status","canDelete","Component","ShowQueue","state","queue","filtered_items","items","queueInfo","filter","includes","quickQ","normalQ","type","map","k","isAdmin","user_id","userID","key","Stopwatch","timerOn","timerStart","timerTime","handleTimer","beingServed","stopTimer","startTimer","setState","now","timer","setInterval","clearInterval","resetTimer","centiseconds","Math","floor","slice","seconds","display","App","cookies","showLandingPage","showSettingsPanel","showInformationPanel","inQueue","processing","get","socket","socketIOClient","handleChange","handleSubmit","handleNewName","handleDQ","handleFinish","enterQueue","renderIntro","renderMain","updateQueueInfo","updateStatus","uniq_id","Array","_","random","toString","join","set","path","on","data","info","find","post","emit","event","target","value","forEach","i","put","newStatus","setTimeout","preventDefault","form","onSubmit","placeholder","onChange","sidePanel","contentPanel","header","src","q","alt","logo","React","withCookies","Root","CookiesProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.e2e3e275.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport './Q.css';\n\nclass QueueItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  onDeleteClick() {\n    axios\n      .delete('http://localhost:8082/api/qitems/'+ this.props.item._id)\n      .then(res => {\n        // this.props.history.push(\"/\");\n        this.props.updateInfo();\n      })\n      .catch(err => {\n        console.log(err.message);\n        console.log(\"Error from QueueItem_deleteClick\");\n      });\n  };\n\n  render () {\n    const name = this.props.item.name;\n    const index = this.props.index;\n    const date = new Date(this.props.item.time);\n\n    let nameString = index + \". \" + name;\n    let minutes = date.getMinutes();\n    if (minutes <= 9) minutes = \"0\" + minutes;\n    let hours = (this.props.timeZone + date.getHours()) % 12;\n    if (!hours) hours = 12;\n    let dateString = hours + \":\" + minutes;\n\n    let deleteBlock = (\n      <div\n          className=\"Queue-item-delete Clickable\"\n          onClick={this.onDeleteClick}\n      > x </div>\n    );\n\n    let emptyBlock = (\n      <div className=\"Queue-item-empty-delete\"> ~ </div>\n    );\n\n    return(\n        <div className={\"Queue-item \" + this.props.status}>\n          <div className=\"Queue-item-name\">\n            {nameString}\n          </div>\n          <div className=\"Queue-item-tail\">\n            <div className=\"Queue-item-date\">\n              {dateString}\n            </div>\n            {this.props.canDelete ? deleteBlock : emptyBlock}\n          </div>\n        </div>\n    );\n  };\n};\n\nexport default QueueItem;","import React, { Component } from 'react';\nimport QueueItem from './QueueItem';\nimport '../App.css';\nimport './Q.css';\n\nclass ShowQueue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      queue: []\n    };\n  }\n\n  render() {\n    const items = this.props.queueInfo;\n    let filtered_items;\n    if (items) filtered_items = items\n      .filter(item => [\"active\", \"in-progress\", \"finished\"].includes(item.status));\n\n    // console.log(\"Queue Contents: \" + JSON.stringify(items));\n    let quickQ = \"n/a\";\n    let normalQ = \"n/a\";\n\n    // filter based on type of queue, sort\n    if(filtered_items) {\n      quickQ = filtered_items\n        .filter(item => item.type === 'quick')\n        .map((item, k) =>\n            <QueueItem\n              status={item.status}\n              canDelete={this.props.isAdmin || item.user_id === this.props.userID}\n              index={k+1}\n              item={item}\n              key={item._id}\n              timeZone={this.props.timeZone}\n            />\n      );\n\n      normalQ = filtered_items\n        .filter(item => item.type === 'normal')\n        .map((item, k) =>\n            <QueueItem\n              status={item.status}\n              canDelete={this.props.isAdmin || item.user_id === this.props.userID}\n              index={k+1}\n              item={item}\n              key={item._id}\n              timeZone={this.props.timeZone}\n              updateInfo={this.props.updateInfo}\n            />\n      );\n    }\n\n    return (\n      <div className=\"Queues\">\n        <div className=\"Queue\">\n          <div className=\"Queue-title\">\n            QUICK QUEUE\n          </div>\n          {quickQ}\n        </div>\n        <div className=\"Queue\">\n          <div className=\"Queue-title\">\n            NORMAL QUEUE\n          </div>\n          {normalQ}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowQueue;","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport \"./Stopwatch.css\";\n\nclass Stopwatch extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  componentDidMount() {\n    this.handleTimer();\n  };\n\n  componentWillUnmount() {\n    this.stopTimer();\n    this.resetTimer();\n  }\n\n  handleTimer = () => {\n    if (this.props.beingServed) {\n      this.stopTimer();\n    } else {\n      this.startTimer();\n    }\n  }\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState({\n      timerStart: 0,\n      timerTime: 0\n    });\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = Math.floor(timerTime / 60000) % 60;\n\n    let display = seconds + ':' + centiseconds;\n    if (minutes) display = minutes + ':' + display;\n\n    return (\n      <div className=\"Stopwatch\">\n        <div className=\"Stopwatch-header\">ELLAPSED</div>\n        <div className=\"Stopwatch-display\">\n          {display}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;","import React from 'react';\nimport { instanceOf } from 'prop-types';\nimport { withCookies, Cookies } from 'react-cookie';\nimport socketIOClient from \"socket.io-client\";\n\nimport q from './q.png';\nimport './App.css';\nimport axios from 'axios';\n\nimport ShowQueue from './components/ShowQueue';\nimport Stopwatch from './components/Stopwatch';\n\nclass App extends React.Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n\n    this.state = {\n      showLandingPage: true,\n      showSettingsPanel: false,\n      showInformationPanel: false,\n      isAdmin: false,\n      inQueue: false,\n      processing: false,\n      timeZone: 0,\n      name: cookies.get('name') || '',\n      userID: cookies.get('user_id') || '',\n      socket: socketIOClient('https://huey-q.herokuapp.com/'),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNewName = this.handleNewName.bind(this);\n    this.handleDQ = this.handleDQ.bind(this);\n    this.handleFinish = this.handleFinish.bind(this);\n    this.enterQueue = this.enterQueue.bind(this);\n    this.renderIntro = this.renderIntro.bind(this);\n    this.renderMain = this.renderMain.bind(this);\n    this.updateQueueInfo = this.updateQueueInfo.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n  };\n\n  componentDidMount() {\n    this.updateQueueInfo();\n\n    // handle cookies\n    const { cookies } = this.props;\n    if (!cookies.get('user_id')) {\n      let uniq_id = [...Array(10)].map(_=>(Math.random()*36|0).toString(36)).join``;\n      cookies.set('user_id', uniq_id, { path: '/' });\n      this.setState({ userID: uniq_id});\n    }\n\n    this.state.socket.on('outgoing data', (data) => {\n      console.log(\"Recieved express socket ping.\")\n      // console.log(data);\n      this.setState({ queueInfo: data.info });\n      if (!data.info.find(\n        item => item.user_id === this.state.userID &&\n        item.status !== \"done\"))\n        this.setState({ inQueue: false });\n      if (data.info.find(\n        item => item.user_id === this.state.userID &&\n        (item.status === \"in-progress\" || item.status === \"finished\"))) {\n\n      }\n    });\n  };\n\n  enterQueue() {\n    const { cookies } = this.props;\n    const data = {\n      name: this.state.name,\n      user_id: cookies.get('user_id') || 888,\n    };\n\n    axios\n      .post('/api/qitems', data)\n      .then(res => {\n        // this.props.history.push('/');\n        this.updateQueueInfo();\n        this.setState({inQueue: true});\n      })\n      .catch(err => {\n        console.log(err.message);\n        console.log(\"Error in create!\");\n      })\n  };\n\n  updateQueueInfo() {\n    axios\n      .get('/api/qitems')\n      .then(res => {\n        this.setState({ queueInfo: res.data });\n        this.state.socket.emit('incoming data', res.data);\n        if (!res.data.find(\n          item => item.user_id === this.state.userID &&\n          item.status === \"active\"))\n          this.setState({ inQueue: false });\n      })\n      .catch(err =>{\n        console.log(err.message);\n        console.log('Error from updateQueueInfo');\n      });\n  };\n\n  handleChange(event) {\n    this.setState({name: event.target.value});\n  };\n\n  handleNewName(user_id) {\n    if (!this.state.queueInfo) return;\n    this.state.queueInfo\n      .filter(item => item.user_id === user_id)\n      .forEach((item, i) => {\n        const data = {\n          name: this.state.name,\n          user_id: item.user_id,\n          type: item.type,\n          status: item.status,\n        };\n        axios\n          .put('/api/qitems/'+item._id, data)\n          .then(res => {\n            console.log('Updated!');\n            this.updateQueueInfo();\n          })\n          .catch(err => {\n            console.log(\"Error in handleNewName!\");\n          })\n      });\n  }\n\n  updateStatus(item, newStatus) {\n    const data = {\n      name: item.name,\n      user_id: item.user_id,\n      type: item.type,\n      status: newStatus,\n    }\n    axios\n      .put('/api/qitems/'+item._id, data)\n      .then(res => {\n        console.log('Updated!');\n        this.updateQueueInfo();\n      })\n      .catch(err => {\n        console.log(\"Error in updateStatus!\");\n      });\n  };\n\n  handleDQ() {\n    if (this.state.queueInfo) {\n      let item = this.state.queueInfo.find(item => item.status === \"active\");\n      if (item) this.updateStatus(item, \"in-progress\");\n    }\n  }\n\n  handleFinish() {\n    if (this.state.queueInfo) {\n      let item = this.state.queueInfo.find(item => item.status === \"in-progress\");\n      if (item) {\n        this.updateStatus(item, \"finished\");\n        setTimeout(() => this.updateStatus(item, \"done\"), 500);\n      };\n    };\n  };\n\n  handleSubmit(event) {\n    const { cookies } = this.props;\n    this.setState({showLandingPage: false});\n\n    if (this.state.name === \"q-admin\" && !this.state.isAdmin) {\n      this.setState({ isAdmin: true });\n    } else if ( this.state.isAdmin ){\n      this.setState({ isAdmin: false });\n    };\n\n    // Only set as anon if there is no stored name\n    if (!this.state.name)\n      this.setState({name: cookies.get('name') || \"Anonymous\"});\n    // If there is need to update, handle potential queue updates\n    if (this.state.name !== cookies.get('name')) {\n      this.handleNewName(cookies.get('user_id'));\n      cookies.set('name', this.state.name, { path: '/' });\n    }\n    event.preventDefault();\n  };\n\n  renderIntro() {\n    let form = (\n      <form className=\"Name-form\" onSubmit={this.handleSubmit}>\n        <label>\n        Hi, I'm\n          <input\n            className=\"Landing-name-text\"\n            type=\"text\"\n            placeholder={this.state.name}\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n        </label>\n        <input className=\"Landing-name-submit\" type=\"submit\" value=\"<Enter>\" />\n      </form>\n    );\n\n    return (\n      <div className=\"Entry\">\n        <div className=\"Welcome\">\n          WELCOME TO THE QUEUE.\n        </div>\n        {form}\n      </div>\n    );\n  };\n\n  renderMain() {\n    let sidePanel;\n\n    if (this.state.isAdmin) {\n      sidePanel = (\n        <div className=\"Side-panel\">\n          {this.state.queueInfo.find(item => item.status !== \"done\") &&\n          (this.state.processing ? <Stopwatch /> :\n            <div className=\"Dequeue\" onClick={\n              () => {\n                this.setState({ processing : true });\n                this.handleDQ();\n              }\n            }>\n              DQ Next Student\n            </div>)\n        }\n          {this.state.processing &&\n            <div className=\"Finish\" onClick={\n              () => {\n                this.setState({ processing : false });\n                this.handleFinish();\n              }\n            }>\n            Finish current student\n          </div>}\n          <div className=\"Manage-settings Clickable\" onClick={\n            () => this.setState({ showSettingsPanel: true, showInformationPanel: false })\n          }>\n            Manage Settings\n          </div>\n          <div className=\"Help Clickable\" onClick={\n            () => this.setState({ showInformationPanel: true, showSettingsPanel: false })\n          }>\n            More Information\n          </div>\n        </div>\n      );\n    } else {\n      sidePanel = (\n        <div className=\"Side-panel\">\n          {\n            this.state.inQueue ? <Stopwatch /> :\n              <div className=\"Enter-queue Clickable\" onClick={this.enterQueue}>\n                Enter The Queue\n              </div>\n          }\n          <div className=\"Manage-settings Clickable\" onClick={\n            () => this.setState({ showSettingsPanel: true, showInformationPanel: false })\n          }>\n            Manage Settings\n          </div>\n          <div className=\"Help Clickable\" onClick={\n            () => this.setState({ showInformationPanel: true, showSettingsPanel: false })\n          }>\n            More Information\n          </div>\n        </div>\n      );\n    };\n\n    let contentPanel = null;\n    if (this.state.showSettingsPanel) {\n      contentPanel = (\n        <div className=\"Side-panel\">\n          <div className=\"Settings\">\n            <form className=\"Settings-name-form\" onSubmit={this.handleSubmit}>\n              <label>\n              Name:\n                <input\n                  className=\"Settings-name-text\"\n                  placeholder={this.state.name}\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                />\n              </label>\n              <input className=\"Settings-name-submit\" type=\"submit\" value=\"<Save>\" />\n            </form>\n            <div className=\"Back Clickable\"\n              onClick={() => this.setState({showSettingsPanel: false})}\n            >\n            Back\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.state.showInformationPanel) {\n      contentPanel = (\n        <div className=\"Side-panel\">\n          <div>\n            Q is a queueing app made by Huey. <br />\n            Created with a <b>MERN</b> stack.\n          </div>\n          <div className=\"Back Clickable\"\n            onClick={() => this.setState({showInformationPanel: false})}>\n          Back\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Main\">\n        <ShowQueue\n          isAdmin={this.state.isAdmin}\n          userID={this.state.userID}\n          queueInfo={this.state.queueInfo}\n          timeZone={this.state.timeZone}\n          updateInfo={this.updateQueueInfo}\n        />\n        {sidePanel}\n        {contentPanel}\n      </div>\n    );\n  };\n\n  render() {\n    let header = (\n      <header className=\"App-header\">\n        <img\n          src={q}\n          className=\"App-logo Clickable\"\n          alt=\"logo\"\n          onClick={() => this.setState({ showLandingPage: true })}\n        />\n        <div className=\"Session-details\">\n          <div className=\"Session-details-instructor\">\n            Huey Sun\n          </div>\n          <div className=\"Session-details-time\">\n            CS62 6-8PM\n          </div>\n          { this.state.isAdmin &&\n          <div className=\"Session-details-admin\">\n            ADMIN MODE\n          </div>\n          }\n        </div>\n      </header>\n    );\n\n    let logo = (\n      <div className=\"Welcome-logo\">\n        <img src={q} className=\"App-logo-main\" alt=\"logo\" />\n      </div>\n    );\n\n    return (\n      <div className=\"App\">\n        {this.state.showLandingPage ? logo: header}\n        <div className=\"Content\">\n          {this.state.showLandingPage ? this.renderIntro() : this.renderMain()}\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default withCookies(App);","import React from 'react';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nexport default function Root() {\n  return (\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/q.811fbfd1.png\";"],"sourceRoot":""}